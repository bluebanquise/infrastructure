# EFI disk boot - auto find script
# Benoit Leveugle <benoit.leveugle@sphenisc.com>

echo " _________________"
echo "|# :           : #|"
echo "|  : Blue      :  |"
echo "|  :  Banquise :  |"
echo "|  :EFI - Grub2:  |"
echo "|  :___________:  |"
echo "|     _________   |"
echo "|    | __      |  |"
echo "|    ||  |     |  |"
echo "\____||__|_____|__|lc"
echo
echo " Loading modules..."
insmod part_gpt
insmod fat
insmod chain
insmod part_msdos
insmod ext2
insmod regexp
insmod xfs
insmod mdraid1x
insmod mdraid09

echo
echo "======================= lsmod ======================================="
lsmod

echo
echo "======================= devices ====================================="
ls

echo
echo "======================= Searching for the BOOT EFI executable ======="
echo "Scanning, 1st pass"
for efi in (hd*,gpt*)/EFI/BOOT/BOOTX64.EFI ; do
	regexp --set=1:root '^\(([^)]+)\)/' "${efi}"
	echo "- Scanning: $efi"
	if [ -e "$efi" ] ; then
		echo "	Found: $efi"
	else
		echo "		$efi does not exist"
	fi
done

echo
echo "Scanning, 2nd pass..."
for efi in (hd*,gpt*)/EFI/BOOT/BOOTX64.EFI ; do
	echo "- Scanning: $efi"
	if [ -e "$efi" ] ; then
		regexp --set 1:root '^\(([^)]+)\)/' "${efi}"
		echo "	Found: $efi"
		echo "	Root: $root"
		echo "	Chainloading $efi"
		chainloader "$efi"
	fi
done

echo
echo "		Found no BOOT EFI executable.  Falling back to shell..."

echo
echo "======================= Searching for Grub EFI executables =========="
echo "Scanning, 1st pass"
for efi in (md*)/EFI/*/shimx64.efi (md*)/EFI/*/grubx64.efi (hd*,gpt*)/EFI/*/shimx64.efi (hd*,gpt*)/EFI/*/grubx64.efi ; do
	regexp --set=1:root '^\(([^)]+)\)/' "${efi}"
	echo "- Scanning: $efi"
	if [ -e "$efi" ] ; then
		echo "	Found: $efi"
	else
		echo "		$efi does not exist"
	fi
done

echo
echo "Scanning, 2nd pass..."
for efi in (md*)/EFI/*/shimx64.efi (md*)/EFI/*/grubx64.efi (hd*,gpt*)/EFI/*/shimx64.efi (hd*,gpt*)/EFI/*/grubx64.efi ; do
	echo "- Scanning: $efi"
	if [ -e "$efi" ] ; then
		regexp --set 1:root '^\(([^)]+)\)/' "${efi}"
		echo "	Found: $efi"
		echo "	Root: $root"
		echo "	Chainloading $efi"
		chainloader "$efi"
	fi
done

echo
echo "		Found no Grub EFI executable to load an OS."

echo
echo "======================= Searching for grub.cfg on local disks ======="
echo "Scanning, 1st pass..."
for grubcfg in (md*)/boot/*/grub.cfg (md*)/*/grub.cfg (md*)/grub.cfg (md*)/EFI/*/grub.cfg (md*)/EFI/*/*/grub.cfg (hd*,gpt*)/boot/*/grub.cfg (hd*,gpt*)/*/grub.cfg (hd*,gpt*)/grub.cfg (hd*,gpt*)/EFI/*/grub.cfg (hd*,gpt*)/EFI/*/*/grub.cfg ; do
	regexp --set=1:root '^\(([^)]+)\)/' "${grubcfg}"
	if [ -e "$grubcfg" ] ; then
		echo "	Found: $grubcfg"
	else
		echo "		$grubcfg does not exist"
	fi
done

echo
echo "Scanning, 2nd pass..."
for grubcfg in (md*)/boot/*/grub.cfg (md*)/*/grub.cfg (md*)/grub.cfg (md*)/EFI/*/grub.cfg (md*)/EFI/*/*/grub.cfg (hd*,gpt*)/boot/*/grub.cfg (hd*,gpt*)/*/grub.cfg (hd*,gpt*)/grub.cfg (hd*,gpt*)/EFI/*/grub.cfg (hd*,gpt*)/EFI/*/*/grub.cfg ; do
	echo "- Scanning: $grubcfg"
	if [ -e "${grubcfg}" ]; then
		regexp --set=1:root '^\(([^)]+)\)/' "${grubcfg}"
		echo "	Found: $grubcfg"
		echo "	Root: $root"
#		echo "	Contents:"
#		cat "$grubcfg"
		configfile "${grubcfg}"
		boot
	fi
done

echo
echo "		Found no grub.cfg configuration file to load."

sleep 4s
